-ifndef(epeg_parser_h).
-define(epeg_parser_h, 1).
-define(TR(A), fun(S, _, K) -> epeg_cps:cps_tr(S, A, K) end).
-define(ANYCHAR(), fun(S, _, K) -> epeg_cps:cps_anychar(S, [], K) end).
-define(CHAR(C), fun(S, _, K) -> epeg_cps:cps_char(S, C, K) end).
-define(CHARR(R), fun(S, _, K) -> epeg_cps:cps_charrange(S, R, K) end).
-define(CHARC(L), fun(S, _, K) -> epeg_cps:cps_charclass(S, L, K) end).
-define(STRING(L), fun(S, _, K) -> epeg_cps:cps_string(S, L, K) end).
-define(SEQ(L), fun(S, _, K) -> epeg_cps:cps_seq(S, L, K) end).
-define(PAND(P), fun(S, _, K) -> epeg_cps:cps_pred_and(S, P, K) end).
-define(PNOT(P), fun(S, _, K) -> epeg_cps:cps_pred_not(S, P, K) end).
-define(ALT(L), fun(S, _, K) -> epeg_cps:cps_alt(S, L, K) end).
-define(REP(P), fun(S, _, K) -> epeg_cps:cps_rep(S, P, K) end).
-define(MORE(P), fun(S, _, K) -> epeg_cps:cps_more(S, P, K) end).
-define(OPT(P), fun(S, _, K) -> epeg_cps:cps_option(S, P, K) end).
-endif.
